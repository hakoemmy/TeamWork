{
 "swagger": "2.0",
 "info": {
  "description": "Teamwork is an internal social network for organizationsâ€™ employees.",
  "version": "v2",
  "title": "TeamWork APIs docs",
  "termsOfService": "http://swagger.io/terms/",
  "contact": {
   "email": "hakoemmy.2017@gmail.com"
  },
  "license": {
   "name": "MIT",
   "url": "https://github.com/hakoemmy/TeamWork/blob/develop/LICENCE.md"
  }
 },
 "host": "team---work.herokuapp.com",
 "basePath": "/api/v2",
 "tags": [
  {
   "name": "User",
   "description": "User Authentication API"
  },
  {
   "name": "Article",
   "description": "share, edit, delete and view an article"
  },
  {
   "name": "Comment",
   "description": "comment on articles",
   "externalDocs": {
    "description": "Find out more",
    "url": "https://github.com/hakoemmy/TeamWork/tree"
   }
  }
 ],
 "schemes": [
  "http"
 ],
 "paths": {
  "/auth/signup": {
   "post": {
    "tags": [
     "User"
    ],
    "summary": "Create user account",
    "description": "",
    "operationId": "signup",
    "consumes": [
     "application/json",
     "application/xml"
    ],
    "produces": [
     "application/xml",
     "application/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "body",
      "description": "User object that's needed to create new account",
      "required": true,
      "schema": {
       "$ref": "#/definitions/signup"
      }
     }
    ],
    "responses": {
     "201": {
      "description": "User created successfully"
     },
     "400": {
        "description": "email is required"
       },
     "409": {
      "description": "Email is already taken!"
     }
    }
   }
  },
  "/auth/signin": {
   "post": {
    "tags": [
     "User"
    ],
    "summary": "signin User",
    "description": "",
    "operationId": "signin",
    "consumes": [
     "application/json",
     "application/xml"
    ],
    "produces": [
     "application/xml",
     "application/json"
    ],
    "parameters": [
     {
      "in": "body",
      "name": "body",
      "description": "User object that's needed to create new account",
      "required": true,
      "schema": {
       "$ref": "#/definitions/signin"
      }
     }
    ],
    "responses": {
        "201": {
         "description": "User created successfully"
        },
        "401": {
            "description": "email or password is incorrect"
           },
        "409": {
         "description": "Email is already taken!"
        }
    }
   }
  },
  "/articles": {
   "post": {
    "tags": [
     "Article"
    ],
    "summary": "Employee can post an article",
    "description": "",
    "operationId": "create-article",
    "produces": [
     "application/xml",
     "application/json"
    ],
    "parameters": [
     {
      "name": "x-auth-token",
      "in": "header",
      "type": "string",
      "description": "The value to provide in the  header of API request"
     },
     {
      "name": "Article details",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/article"
      }
     }
    ],
    "responses": {
     "201": {
      "description": "article successfully created"
     },
     "403": {
      "description": "Aww snap!.. you are not the owner of an article"
     }
    }
   }
  },
  "/feeds": {
    "get": {
     "tags": [
      "Article"
     ],
     "summary": "Employee can view all articles",
     "description": "",
     "operationId": "View-all-article",
     "produces": [
      "application/xml",
      "application/json"
     ],
     "responses": {
      "200": {
       "description": "success"
      }
     }
    }
   },
   "/articles/{articleId}": {
    "get": {
     "tags": [
      "Article"
     ],
     "summary": "Employee can view a specific article",
     "description": "",
     "operationId": "View-specific-article",
     "produces": [
      "application/xml",
      "application/json"
     ],
     "responses": {
      "200": {
       "description": "success"
      },
      "404": {
        "description": "Such article is not found!"
       }
     },
     "parameters": [
        {
         "name": "articleId",
         "in": "path",
         "description": "an article id",
         "required": true,
         "type": "integer"
        }
       ]
    },
    "patch": {
        "tags": [
         "Article"
        ],
        "summary": "Employees can edit their articles",
        "description": "",
        "operationId": "edit-article",
        "produces": [
         "application/xml",
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "article edited successfully"
         },
         "404": {
           "description": "Such article is not found!"
          }
        },
        "parameters": [
            {
                "name": "x-auth-token",
                "in": "header",
                "type": "string",
                "description": "The value to provide in the  header of API request"
               },
           {
            "name": "articleId",
            "in": "path",
            "description": "an article id",
            "required": true,
            "type": "integer"
           },
           {
            "name": "Article details",
            "in": "body",
            "required": true,
            "schema": {
             "$ref": "#/definitions/article"
            }
           }
          ]
       },
       "delete": {
        "tags": [
         "Article"
        ],
        "summary": "Employees can delete their articles",
        "description": "",
        "operationId": "delete-article",
        "produces": [
         "application/xml",
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "article edited successfully"
         },
         "404": {
           "description": "Such article is not found!"
          }
        },
        "parameters": [
            {
                "name": "x-auth-token",
                "in": "header",
                "type": "string",
                "description": "The value to provide in the  header of API request"
               },
           {
            "name": "articleId",
            "in": "path",
            "description": "an article id",
            "required": true,
            "type": "integer"
           }
          ]
       }
      },


 "/articles/{articleId}/comments": {
    "post": {
     "tags": [
      "Comment"
     ],
     "summary": "Employee can comment on any article",
     "description": "",
     "operationId": "comment-on-article",
     "produces": [
      "application/xml",
      "application/json"
     ],
     "parameters": [
      {
       "name": "x-auth-token",
       "in": "header",
       "type": "string",
       "description": "The value to provide in the  header of API request"
      },
      {
        "name": "articleId",
        "in": "path",
        "description": "an article id",
        "required": true,
        "type": "integer"
       },
      {
       "name": "Comment details",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/comment"
       }
      }
     ],
     "responses": {
      "201": {
       "description": "comment added successfully"
      },
      "403": {
       "description": "Aww snap!.. you are not the owner of an article"
      }
     }
    }
   }
 },
 "definitions": {
  "signup": {
   "type": "object",
   "properties": {
    "firstName": {
     "type": "string"
    },
    "lastName": {
     "type": "string"
    },
    "email": {
     "type": "string"
    },
    "password": {
     "type": "string"
    },
    "gender": {
     "type": "string"
    },
    "jobRole": {
        "type": "string"
       },
     "department": {
        "type": "string"
     },
     "address": {
        "type": "string"
     }
      
   },
   "xml": {
    "name": "User Signup"
   }
  },
  "signin": {
   "type": "object",
   "properties": {
    "email": {
     "type": "string"
    },
    "password": {
     "type": "string"
    }
   },
   "xml": {
    "name": "User Signup"
   }
  },
  "article": {
   "type": "object",
   "properties": {
    "title": {
     "type": "string"
    },
    "article": {
        "type": "string"
       }
   },
   "xml": {
    "name": "Article"
   }
  },
  "comment": {
   "type": "object",
   "properties": {
    "comment": {
     "type": "string"
    }
   },
   "xml": {
    "name": "Comment"
   }
  }
 }
}